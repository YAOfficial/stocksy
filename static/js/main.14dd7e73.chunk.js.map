{"version":3,"sources":["Components/Header.js","Components/CompanyInfo.js","Components/Content.js","Layout.js","reportWebVitals.js","index.js"],"names":["App","className","Companyinfo","src","this","props","imglink","name","React","Component","id","type","maxLength","onKeyUp","e","val","btnDOM","document","getElementById","length","disabled","innerHTML","validateBtn","target","value","onClick","stock","require","request","json","err","res","body","console","log","dataArray","push","CompanyDiv","map","item","logo","ReactDom","render","axios","method","url","params","symbol","interval","range","comparisons","headers","then","response","data","catch","error","Layout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"+hBAgBeA,MAZf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACC,wCACA,sBAAMA,UAAU,kBAAhB,oBACA,cAAC,IAAD,U,2DCIQC,E,uKATP,OACI,qCACA,qBAAKC,IAAKC,KAAKC,MAAMC,UACrB,6BAAKF,KAAKC,MAAME,c,GALFC,IAAMC,WCiGjBT,E,uKAdb,OACE,qBAAKC,UAAU,UAAf,SACE,yBAAQA,UAAU,iBAAlB,UAEE,mBAAGS,GAAG,UAAN,0BACA,uBAAOC,KAAK,OAAOD,GAAG,SAASE,UAAU,IAAIC,QAAU,SAACC,GAAD,OAjB/D,SAAsBC,GAClB,IAAIC,EAASC,SAASC,eAAe,UAGjCH,EAAII,OAAQ,GACZH,EAAOI,UAAW,EAClBJ,EAAOK,UAAU,wBAEdL,EAAOI,UAAW,EAAOJ,EAAOK,UAAU,gBASiBC,CAAYR,EAAES,OAAOC,UACnF,wBAAQb,KAAK,SAASD,GAAG,SAAUe,QAjF1C,WAIO,IAAMC,EAAQT,SAASC,eAAe,UAAUM,MAGhCG,EAAQ,IAExBC,CAAQ,mDAAD,OAAoDF,EAApD,+BAAwF,CAAEG,MAAM,IAAQ,SAACC,EAAKC,EAAKC,GACxH,GAAIF,EAAO,OAAOG,QAAQC,IAAIJ,GAEpCG,QAAQC,IAAIF,GACb,IAAIG,EAAY,GAChBA,EAAUC,KAAKJ,GAHd,IAIMK,EAJN,uKAQM,OACE,mCACIF,EAAUG,KAAI,SAAAC,GAAI,OAAI,cAAC,EAAD,CAAcjC,QAASiC,EAAKC,KAAMjC,KAAMgC,EAAKhC,gBAV/E,GAIyBC,IAAMC,WAW7BgC,IAASC,OAAO,cAACL,EAAD,IAAepB,SAASC,eAAe,wBA0BzDyB,IAAMf,QAlBU,CACdgB,OAAQ,MACRC,IAAK,oEACTC,OAAQ,CACNC,OAAQ,OACRC,SAAU,KACVC,MAAO,KAEPC,YAAa,gBAGXC,QAAS,CACP,iBAAkB,qDAClB,kBAAmB,6CAKAC,MAAK,SAAUC,GAClCpB,QAAQC,IAAImB,EAASC,SACtBC,OAAM,SAAUC,GACfvB,QAAQuB,MAAMA,OA0Bd,mCACA,qBAAK9C,GAAG,8B,GArFEF,IAAMC,WCGTgD,MATf,WACE,OACI,qCACJ,cAAC,EAAD,IACA,cAAC,EAAD,QCMaC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBR,MAAK,YAAkD,IAA/CS,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASxB,OACP,cAAC,IAAMyB,WAAP,UACD,cAAC,EAAD,MAEClD,SAASC,eAAe,SAO1BwC,M","file":"static/js/main.14dd7e73.chunk.js","sourcesContent":["import logo from '../Images/logo.png';\nimport '../Stylesheets/Header.css';\nimport { FaGithub } from 'react-icons/fa';\nimport React from \"react\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n       <h1>Stonks</h1>\n       <span className=\"visually-hidden\">Github</span>\n       <FaGithub />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\"\r\n\r\n// CREATING THE COMPANY INFO DIV AND GIIVING THE IMG AND H1 TAG VALUES \r\nclass Companyinfo extends React.Component {   \r\n    render(){\r\n        return (\r\n            <>\r\n            <img src={this.props.imglink} />\r\n            <h1>{this.props.name}</h1>\r\n            </>\r\n        )\r\n        }\r\n  }\r\n\r\nexport default Companyinfo","import logo from '../Images/logo.png';\r\nimport '../Stylesheets/Content.css';\r\nimport React, { useState } from 'react';\r\nimport ReactDom from \"react-dom\"\r\nimport axios from \"axios\";\r\nimport Companyinfo from \"./CompanyInfo\"\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n render(){\r\n function loadDoc (){\r\n    \r\n    \r\n        // GETS VALUE OF THE STOCKS TEXT \r\n        const stock = document.getElementById(\"stocks\").value;\r\n\r\n        // API INITALIZE\r\n        const request = require('request');\r\n                                                          //INTREPOLATING THE STOCK VARIABLE INTO THE API CALL\r\n        request(`https://finnhub.io/api/v1/stock/profile2?symbol=${stock}&token=bv5umqf48v6phr4c2icg`, { json: true }, (err, res, body) => {\r\n          if (err) { return console.log(err) }\r\nelse{\r\n    console.log(body)\r\n   let dataArray = []\r\n   dataArray.push(body)\r\n    class CompanyDiv extends React.Component {\r\n   \r\n        render() {\r\n         \r\n          return (\r\n            <>\r\n               {dataArray.map(item => <Companyinfo  imglink={item.logo} name={item.name}/>)}\r\n            </>\r\n          );\r\n        }\r\n      }\r\n      ReactDom.render(<CompanyDiv/>, document.getElementById(\"companyContainer\"))\r\n    \r\n          \r\n}\r\n })\r\n        // ALLOW A HEADER COMPONENT TO POP UP ON ERROR AND LET IT BE DISABLED ON API RETURN \r\n      \r\n   // ESTABLISHING PARAMETERS FOR THE YAHOO FINANCE API \r\n    const options = {\r\n      method: 'GET',\r\n      url: 'https://apidojo-yahoo-finance-v1.p.rapidapi.com/market/get-charts',\r\n  params: {\r\n    symbol: 'ULVR',\r\n    interval: '5m',\r\n    range: '1d',\r\n  \r\n    comparisons: '^GDAXI,^FCHI'\r\n  },\r\n           // MY API KEY , CHECK THE YAHOO API DOC FOR MORE DETAILS\r\n      headers: {\r\n        'x-rapidapi-key': '3cf33b550fmsh79dc738d4c5cf88p159e46jsn093272dcf85c',\r\n        'x-rapidapi-host': 'apidojo-yahoo-finance-v1.p.rapidapi.com'\r\n      }\r\n    };\r\n   \r\n    //CALLING THE YAHOO FINANCE API \r\n    axios.request(options).then(function (response) {\r\n        console.log(response.data);\r\n    }).catch(function (error) {\r\n        console.error(error);\r\n    });\r\n    \r\n}\r\n\r\n\r\n\r\n// FUNCTION TO VALIDATE THE BUTTON \r\nfunction validateBtn (val)  {\r\n    let btnDOM = document.getElementById(\"button\")\r\n   \r\n    // IF THE INPUT HAS A VALUE LENGTH LESS THEN 1 BUTTON IS DISABLED \r\n    if( val.length <1 ) { \r\n        btnDOM.disabled = true \r\n        btnDOM.innerHTML=\"Enter letter symbol\"\r\n  }  // ELSE BUTTON IS ENABLED WITH SOME ADDED TEXT\r\n    else { btnDOM.disabled = false; btnDOM.innerHTML=\"Request Data\" }\r\n}\r\n\r\n\r\n  return (\r\n    <div className=\"Content\">\r\n      <header className=\"Content-header\">\r\n        \r\n        <p id=\"results\"> Stock Info </p>\r\n        <input type=\"text\" id=\"stocks\" maxLength=\"4\" onKeyUp={ (e) => validateBtn(e.target.value) }></input>\r\n        <button type=\"button\" id=\"button\"  onClick={loadDoc}>Enter a letter symbol</button>\r\n        <div id=\"companyContainer\"></div>\r\n      </header>\r\n    </div>\r\n  );\r\n }\r\n}\r\n\r\nexport default App;\r\n","import Header from './Components/Header';\r\nimport Content from './Components/Content';\r\nfunction Layout() {\r\n  return (\r\n      <>\r\n  <Header/>\r\n  <Content/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Layout from './Layout';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n <Layout/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}