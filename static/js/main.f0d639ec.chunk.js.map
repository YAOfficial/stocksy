{"version":3,"sources":["Components/CompanyInfo.js","Components/CompanyNews.js","Components/PredictComp.js","Components/SearchFunctionality.js","Components/MarketInfo.js","Components/CompanyComp.js","Layout.js","reportWebVitals.js","index.js"],"names":["Companyinfo","Card","text","Img","variant","className","src","this","props","imglink","Body","Title","id","name","ListGroup","ListGroupItem","industry","networth1","ipo","React","Component","CompanyNews","title","substring","Text","source","words","Link","href","url","PredictComp","Header","Item","high","low","mean","App","DateTime","require","type","onKeyUp","e","val","btnDOM","document","getElementById","length","disabled","innerHTML","validateBtn","target","value","Button","onClick","stock","request3","request4","json","err","res","body","console","log","mane","PredictionComponent","symbol","targetHigh","targetLow","targetMean","ReactDom","render","now","local","a","toFormat","b","Intl","DateTimeFormat","month","format","year","c","pe","minus","past1","request2","toUpperCase","CompanyComponent","map","item","image","headline","summary","request","style","display","dataArray","push","CompanyDiv","networth","parseInt","marketCapitalization","toLocaleString","finnhubIndustry","logo","options","method","params","interval","range","comparisons","headers","axios","then","response","arr","data","chart","result","indicators","quote","times","timestamp","day","StockChart","x","unix","close","decreasing","line","color","increasing","open","layout","width","dragmode","showlegend","xaxis","rangeslider","visible","yaxis","autorange","catch","error","AlertDismissibleExample","useState","show","setShow","Alert","onClose","dismissible","Heading","rel","CompanyInfo","fluid","MarketComponent","MarketInfo","CompanyComp","class","Layout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.f0d639ec.chunk.js","sourcesContent":["import React from \"react\"\r\nimport Card from 'react-bootstrap/Card'\r\nimport {ListGroup, ListGroupItem} from 'react-bootstrap'\r\n// here we use the values from the api basic react resuable component stuff \r\nclass Companyinfo extends React.Component {   \r\n\r\n    render(){\r\n     \r\n        return (\r\n            <>\r\n            \r\n    <Card    text=\"dark\"  >\r\n  <Card.Img variant=\"top\"  className=\"stocklogo\" src={this.props.imglink} />\r\n  <Card.Body  >\r\n    <Card.Title id=\"names\" text=\"primary\">{this.props.name}</Card.Title>\r\n    \r\n  </Card.Body>\r\n  <ListGroup className=\"flush listG\">\r\n    <ListGroupItem>Industry:  {this.props.industry}</ListGroupItem>\r\n    <ListGroupItem>Market Cap: <span id=\"marketcap\">{this.props.networth1}</span>  </ListGroupItem>\r\n    <ListGroupItem>Ipo'ed at : {this.props.ipo} </ListGroupItem>\r\n  </ListGroup>\r\n  \r\n</Card>\r\n            </>\r\n        )\r\n        }\r\n  }\r\n\r\nexport default Companyinfo","import React from \"react\"\r\nimport '../Stylesheets/CompanyComp.css';\r\nimport Card from 'react-bootstrap/Card'\r\n// here we use the values from the api basic react resuable component stuff \r\nclass CompanyNews extends React.Component {   \r\n    render(){\r\n\r\n      \r\n        return (\r\n            <>\r\n            <Card>\r\n           \r\n            <Card.Img variant=\"top\" src={this.props.src} />\r\n            <Card.Body>\r\n              <Card.Title>{this.props.title.substring(0, 70)}...</Card.Title>\r\n              <Card.Text>\r\n              {this.props.source}\r\n              </Card.Text>\r\n            </Card.Body>\r\n            <Card.Body>\r\n            <Card.Text>\r\n              {this.props.words.substring(0, 20)}...\r\n            </Card.Text>\r\n              <Card.Link href={this.props.url}>View Story</Card.Link>\r\n            </Card.Body>\r\n          </Card>\r\n         \r\n          </>\r\n        )\r\n        }\r\n  }\r\n\r\nexport default CompanyNews","import React from \"react\"\r\nimport Card from 'react-bootstrap/Card'\r\nimport {ListGroup} from 'react-bootstrap'\r\n// here we use the values from the api basic react resuable component stuff \r\nclass PredictComp extends React.Component {   \r\n\r\n    render(){\r\n     \r\n      return (\r\n        <>\r\n        \r\n        <Card >\r\n<Card.Header>Stock Predictions for {this.props.name}</Card.Header>\r\n<ListGroup variant=\"flush\">\r\n\r\n<ListGroup.Item>Highest price targeted to reach: {this.props.high}</ListGroup.Item>\r\n<ListGroup.Item>Lowest price targeted to reach: {this.props.low}</ListGroup.Item>\r\n<ListGroup.Item>average price targeted to reach: {this.props.mean}</ListGroup.Item>\r\n</ListGroup>\r\n</Card>\r\n        </>\r\n    )\r\n     }\r\n        \r\n        }\r\n  \r\n\r\nexport default PredictComp","import '../Stylesheets/Content.css';\r\nimport React, { useState } from 'react';\r\nimport ReactDom from \"react-dom\"\r\nimport axios from \"axios\";\r\nimport Companyinfo from \"./CompanyInfo\"\r\nimport Alert from 'react-bootstrap/Alert'\r\nimport Button from 'react-bootstrap/Button'\r\nimport { FaGithub } from 'react-icons/fa';\r\nimport CompanyNews from \"./CompanyNews.js\"\r\nimport PredictComp from \"./PredictComp.js\"\r\nimport Plot from 'react-plotly.js';\r\nclass App extends React.Component {\r\n  \r\n render(){\r\n  \r\n\r\n  const { DateTime } = require(\"luxon\");\r\n \r\n function loadDoc(){\r\n\r\n// getting the value of the input and saving it to a \"stock\" variable\r\n  const stock = document.getElementById(\"stocks\").value;\r\n\r\n  // api call :\r\n  const request3 = require('request');\r\n  const request4 = require('request');\r\n\r\n  // this following code is a mistake but after working on it i got burned out to fix , ill come back to this \r\n  // and fix it \r\n\r\n  //intrepolating the value of the variable \"stock\" which = the value of the input and we do an api call on it\r\n  request3(`https://finnhub.io/api/v1/stock/price-target?symbol=${stock}&token=bv5umqf48v6phr4c2icg`, { json: true }, (err, res, body) => {\r\n  \r\n  if (err) { return console.log(err); } \r\n  // interpolating stock  as explained above\r\n  request4(`https://finnhub.io/api/v1/quote?symbol=${stock}&token=bv5umqf48v6phr4c2icg`, { json: true }, (err, res, mane) => {\r\n    if (err) { return console.log(err); }\r\n    \r\n    // simple react reusable component to get the api values and use them in our componenet on another file\r\n    class PredictionComponent extends React.Component{\r\n      render(){\r\n          return (\r\n              <>\r\n             <PredictComp name={body.symbol} high={body.targetHigh} low={body.targetLow} mean={body.targetMean} ></PredictComp>\r\n              </>\r\n          )\r\n      }\r\n  }ReactDom.render(<PredictionComponent/>, document.getElementById(\"pricesContainer\"))\r\n  });});\r\n\r\n // getting the time using luxon framework \r\n  var now = DateTime.local();\r\n  // formating time \r\n  let a = now.toFormat('dd');\r\n  var format = { month: '2-digit'};\r\n  let b =  Intl.DateTimeFormat('en-US', format).format(now)\r\n  console.log(b)\r\n\r\n  // getting the years month and day \r\n  let year =`${now.c.year}-${b}-${a}`\r\n \r\n  // minus year by 1 \r\n  let pe = now.minus({year: 1});\r\n  let past1 = `${pe.c.year}-${b}-${a}`\r\n\r\n       // another api call \r\n        const request2 = require('request');\r\n       // using the stock variable and the time values we made above to do an api call\r\nrequest2(`https://finnhub.io/api/v1/company-news?symbol=${stock.toUpperCase()}&from=${past1}&to=${year}&token=bv5umqf48v6phr4c2icg`, { json: true }, (err, res, body) => {\r\n  if (err) { return console.log(err); } \r\n  // get only 6 latest news articles\r\n body.length = 6\r\n \r\n // same react reusable component i mentioned above\r\n  class CompanyComponent extends React.Component{\r\n    render(){\r\n\r\n      // if there is no Company mews remove \"Company info\" text\r\nif(!body[0]){\r\n  document.getElementById(\"companyInfo\").innerHTML = \"\"\r\n} else{\r\n  // else let the text equal to the the value below\r\n  document.getElementById(\"companyInfo\").innerHTML = \"Company Info\"\r\n}\r\n     // getting the api value and using it on a react component in another file\r\n        return (\r\n            <>\r\n            {body.map(item => <CompanyNews src={item.image} title={item.headline} words={item.summary} url={item.url} source={item.source} />)}\r\n            </>\r\n        )\r\n    }\r\n} ReactDom.render(<CompanyComponent/>, document.getElementById(\"companyNewsContainer\"))\r\n});\r\n        \r\n        // API INITALIZE\r\n        const request = require('request');\r\n                                                          //INTREPOLATING THE STOCK VARIABLE INTO THE API CALL\r\n        request(`https://finnhub.io/api/v1/stock/profile2?symbol=${stock}&token=bv5umqf48v6phr4c2icg`, { json: true }, (err, res, body) => {\r\n          if (err) { \r\n           console.log(err)\r\n           // if there is api error remove all content expect error message and header \r\n           document.getElementById(\"themain\").style.display = \"none\"\r\n          }\r\n          \r\nelse {\r\n // LOG THE RETURNED VALUE FROM THE API and save it to an array named \"dataArray\"\r\n   var dataArray = []\r\n   dataArray.push(body)\r\n\r\n   // RUN THROUGH THE ARRAY AND ADD VALUES TO VARIABLES TO USE ON ELEMENTS\r\n    class CompanyDiv extends React.Component {\r\n   \r\n        render() {\r\n        // the market cap was presented as a full number example: \"23232323232\" i wanted to present in a formated way example \"32,3232,32\" so users can better understand\r\n         let networth = parseInt(dataArray[0].marketCapitalization).toLocaleString()\r\n         \r\n          return (\r\n            \r\n            <>\r\n               {dataArray.map(item => <Companyinfo ipo={item.ipo} networth1={networth} industry={item.finnhubIndustry}  imglink={item.logo} name={item.name}/>)}\r\n            </>\r\n          );\r\n        }\r\n      }\r\n      ReactDom.render(<CompanyDiv/>, document.getElementById(\"companyContainer\"))\r\n}\r\n })\r\n\r\n   // ESTABLISHING PARAMETERS FOR THE YAHOO FINANCE API READ THE YAHOO API DOC FOR INFO \r\n    const options = {\r\n      method: 'GET',\r\n      url: 'https://apidojo-yahoo-finance-v1.p.rapidapi.com/market/get-charts',\r\n  params: {\r\n    // here we make the symbol we are getting equal to the input value\r\n    symbol:  stock,\r\n    interval: '5m',\r\n    range: 'max',\r\n    \r\n    comparisons: '^GDAXI,^FCHI'\r\n  },\r\n           // MY API KEY , CHECK THE YAHOO API DOC FOR MORE DETAILS\r\n      headers: {\r\n        'x-rapidapi-key': '3cf33b550fmsh79dc738d4c5cf88p159e46jsn093272dcf85c',\r\n        'x-rapidapi-host': 'apidojo-yahoo-finance-v1.p.rapidapi.com'\r\n      }\r\n    };\r\n    \r\n  \r\n    //CALLING THE YAHOO FINANCE API \r\n    axios.request(options).then(function (response) {\r\n\r\n      // getting the qoutes array\r\n      let arr = response.data.chart.result[0].indicators.quote[0]\r\n\r\n      // getting timestamp array\r\n     var times = response.data.chart.result[0].timestamp\r\n     document.getElementById(\"mains\").style.display = \"none\"\r\n\r\n     // formatting date for the api\r\n     var format = {year: 'numeric', month: '2-digit' , day: 'numeric'};\r\n\r\n     // if api is a succes show the content\r\n     document.getElementById(\"themain\").style.display = \"inherit\"\r\n     \r\n      class StockChart extends React.Component {\r\n        render() {\r\n          \r\n          return (\r\n          \r\n  <Plot\r\n   \r\n              data={[\r\n                {\r\n                  // we map through timestamp array and convert them into real dates example: \"343434343\" into \"2020 01 03\"\r\n                  x: times.map(unix => Intl.DateTimeFormat('en-US', format).format(unix*1000)),\r\n                  // read plotly doc for more info on the bottom since its not important to describe each line\r\n                  close: arr.close,\r\n                  decreasing: {line: {color: 'red'}},\r\n                  high:arr.high,\r\n                  increasing: {line: {color: 'green'}},\r\n                  line: {color: 'rgba(31,119,180,1)'},\r\n                  low: arr.low,\r\n                  open: arr.open,\r\n                  type: 'candlestick',\r\n                },\r\n              ]}\r\n                layout={{\r\n                 \r\n                width: \"700\",\r\n                  title: stock.toUpperCase(),\r\n                  dragmode: 'zoom',\r\n                  showlegend: false,\r\n                  xaxis: {\r\n                      rangeslider: {\r\n                          visible: true\r\n                      }\r\n\r\n                  },\r\n                  yaxis: {\r\n                      autorange: true,\r\n                  }\r\n          }}\r\n            />\r\n          );\r\n        }\r\n      }ReactDom.render(<StockChart/>, document.getElementById(\"stocksContainer\"))\r\n     \r\n        // IF THE API DOESNT WORK SHOW ERROR ALERT\r\n       \r\n    }).catch(function (error) {\r\n    \r\n        console.log(error)  \r\n        if(error){\r\n        document.getElementById(\"themain\").style.display = \"none\"\r\n        \r\n\r\n        function AlertDismissibleExample() {\r\n          const [show, setShow] = useState(true);\r\n        \r\n          if (show) {\r\n            return (\r\n              <Alert id=\"errorBox\" variant=\"danger\" onClose={() => setShow(false)} dismissible>\r\n                <Alert.Heading variant=\"success\">Oh snap! we couldnt find market data for {document.getElementById(\"stocks\").value}</Alert.Heading>\r\n                <p>\r\n                  You may not be connected to the internet! Also keep in mind this site is only for Us and Canadian stocks either write the stock correctly or try a different symbol.\r\n                </p>\r\n              </Alert>\r\n            );\r\n          } \r\n         \r\n        \r\n        } ReactDom.render(<AlertDismissibleExample/>, document.getElementById(\"mains\"));\r\n        document.getElementById(\"mains\").style.display = \"inherit\"\r\n      }\r\n    });\r\n \r\n}\r\n// FUNCTION TO VALIDATE THE BUTTON \r\nfunction validateBtn (val)  {\r\n    let btnDOM = document.getElementById(\"button\")\r\n   \r\n    // IF THE INPUT HAS A VALUE LENGTH LESS THEN 1 BUTTON IS DISABLED \r\n    if( val.length <1 ) { \r\n        btnDOM.disabled = true \r\n        btnDOM.innerHTML=\"Enter stock symbol\"\r\n  }  // ELSE BUTTON IS ENABLED WITH SOME ADDED TEXT\r\n    else { btnDOM.disabled = false; btnDOM.innerHTML=\"Request Data\" }\r\n}\r\n\r\n\r\n  return (\r\n    <div className=\"Content\" >\r\n      <header  className=\"Content-header col-sm-10 col-md-9 col-lg-6 col-xl-3\">\r\n        <p id=\"results\"> Stock Info </p>\r\n        <div id=\"inputs\">\r\n        <input type=\"text\" id=\"stocks\"  onKeyUp={ (e) => validateBtn(e.target.value) }></input>\r\n        <Button variant=\"light\" type=\"button\" id=\"button\"  onClick={loadDoc}>Enter a stock symbol  </Button>\r\n        <a   href=\"https://github.com/YAOfficial/stocksy\"  target=\"_blank\" rel=\"noopener noreferrer\">\r\n              <FaGithub  id=\"github\" />\r\n            </a>\r\n        </div>\r\n      </header> \r\n      <div id=\"mains\" ></div>\r\n    </div>\r\n  );\r\n }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\"\r\nimport '../Stylesheets/CompanyComp.css';\r\nimport Card from 'react-bootstrap/Card'\r\n// here we use the values from the api basic react resuable component stuff \r\nclass CompanyInfo extends React.Component {   \r\n    render(){\r\n        return (\r\n            <Card >\r\n            <Card.Img fluid variant=\"top\" src={this.props.src} />\r\n            <Card.Body>\r\n              <Card.Title>{this.props.title.substring(0, 70)}...</Card.Title>\r\n              <Card.Text>\r\n              {this.props.source}\r\n            \r\n              </Card.Text>\r\n            </Card.Body>\r\n            \r\n            <Card.Body>\r\n            <Card.Text>\r\n              {this.props.words.substring(0, 70)}...\r\n            </Card.Text>\r\n              <Card.Link href={this.props.url}>View Story</Card.Link>\r\n              \r\n            </Card.Body>\r\n          </Card>\r\n        )\r\n        }\r\n  }\r\n\r\nexport default CompanyInfo","import React from \"react\"\r\nimport ReactDom from \"react-dom\"\r\nimport '../Stylesheets/CompanyComp.css';\r\nimport MarketInfo from \"./MarketInfo.js\"\r\n\r\n// api call \r\nconst request = require('request');\r\n\r\n// here we get the general market news \r\nrequest('https://finnhub.io/api/v1/news?category=general&token=bv5umqf48v6phr4c2icg', { json: true }, (err, res, body) => {\r\n  if (err) { return console.log(err); }\r\n \r\n  console.log(body)\r\n  // get latest 6 news articles\r\n body.length = 6\r\n// and we map  through array and use their values\r\n  class MarketComponent extends React.Component{\r\n      render(){\r\n\r\n      \r\n          return (\r\n              <>\r\n              {body.map(item => <MarketInfo src={item.image} title={item.headline} words={item.summary} url={item.url} source={item.source} />)}\r\n              </>\r\n          )\r\n      }\r\n  } ReactDom.render(<MarketComponent/>, document.getElementById(\"marketNewsContainer\"))\r\n\r\n\r\n});\r\n\r\n\r\n\r\n// this is our main content component now we make the layout and sort it out \r\nclass CompanyComp extends React.Component {   \r\n    render(){\r\n        return(\r\n        <div id=\"themain\" >\r\n         <div className=\"card-columns\">\r\n       <div  id=\"companyContainer\"></div>\r\n       <div  id=\"pricesContainer\"></div>\r\n       </div>\r\n       <div  id=\"stocksContainer\"></div>\r\n       <div style={{color: \"white\"}}  id=\"companyInfo\" className=\"row heads\">\r\n        </div>\r\n       <div class=\"card-columns\">\r\n       <div  id=\"companyNewsContainer\"></div>\r\n       </div>\r\n        <div style={{color: \"white\"}} className=\"row heads\">\r\n          Market Info \r\n        </div>\r\n        <div className=\"card-columns\">\r\n       <div  id=\"marketNewsContainer\"></div>\r\n           </div>\r\n      </div> \r\n         ) \r\n        }\r\n  }\r\n\r\nexport default CompanyComp","\r\nimport Search from './Components/SearchFunctionality';\r\nimport CompanyDiv from './Components/CompanyComp';\r\nfunction Layout() {\r\n  return (\r\n      <>\r\n  <Search />\r\n <CompanyDiv/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Layout;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Layout from './Layout';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n <Layout/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}